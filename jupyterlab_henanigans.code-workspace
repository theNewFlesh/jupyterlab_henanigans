{
    "folders": [{"path": "./"}],
    "settings": {
        "debug.allowBreakpointsEverywhere": true,
        "python.languageServer": "Pylance",
        "python.linting.enabled": true,
        "python.linting.flake8Args": ["--config=docker/flake8.ini"],
        "python.linting.flake8Enabled": true,
        "python.linting.flake8Path": "/home/ubuntu/.local/bin/flake8",
        "python.linting.mypyArgs": ["--config=docker/mypy.ini"],
        "python.linting.mypyEnabled": true,
        "python.linting.mypyPath": "/home/ubuntu/.local/bin/mypy",
        "python.linting.pycodestylePath": "/home/ubuntu/.local/bin/pycodestyle",
        "python.linting.pylintEnabled": false,
        "python.pythonPath": "/usr/bin/python3.7",
        "python.testing.pytestArgs": [],
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false,
        "todo-tree.filtering.excludeGlobs": ["**/docs/**/*.*"],
        "terminal.integrated.profiles.linux": {
            "zsh": {"path": "/bin/zsh"}
        },
        "search.exclude": {
            "**/docs": true
        },
        "files.exclude": {
            "**/.classpath": true,
            "**/.coverage": true,
            "**/.DS_Store": true,
            "**/.factorypath": true,
            "**/.git": true,
            "**/.hg": true,
            "**/.ipynb_checkpoints": true,
            "**/.mypy_cache": true,
            "**/.project": true,
            "**/.pytest_cache": true,
            "**/.settings": true,
            "**/.svn": true,
            "**/CVS": true,
            "*/*/**/node_modules": true,
            "**/.vscode": true,
            "**/flask_monitoringdashboard.db": true
        }
    },
    "tasks": {
        "version": "2.0.0",
        "options": {
            "cwd": "/home/ubuntu/${workspaceFolderBasename}",
            "env": {
                "REPO": "${workspaceFolderBasename}",
                "PYTHONPATH": "${PYTHONPATH}:/home/ubuntu/${workspaceFolderBasename}/python",
                "REPO_ENV": "True"
            }
        },
        "tasks": [
            {
                "label": "lab",
                "command": [
                    "cp docker/prod_requirements.txt . && ",
                    "cp docker/dev_requirements.txt . && ",
                    "sudo /home/ubuntu/.local/bin/jupyter labextension develop --overwrite &&",
                    "rm prod_requirements.txt && ",
                    "rm dev_requirements.txt && ",
                    "jlpm watch &",
                    "jupyter lab --allow-root --ip=0.0.0.0 --no-browser"
                ],
                "type": "shell"
            },
            {
                "label": "package-repo",
                "command": [
                    "cd /home/ubuntu/$REPO &&",
                    "rm -rf /tmp/$REPO && ",
                    "mkdir /tmp/$REPO && ",
                    "cp docker/dev_requirements.txt /tmp/$REPO/ && ",
                    "cp docker/prod_requirements.txt /tmp/$REPO/ && ",
                    "cp install.json /tmp/$REPO && ",
                    "cp LICENSE /tmp/$REPO/LICENSE && ",
                    "cp MANIFEST.in /tmp/$REPO/MANIFEST.in && ",
                    "cp package.json /tmp/$REPO &&",
                    "cp pyproject.toml /tmp/$REPO/pyproject.toml && ",
                    "cp README.md /tmp/$REPO/README.md && ",
                    "cp RELEASE.md /tmp/$REPO/RELEASE.md && ",
                    "cp setup.py /tmp/$REPO/ && ",
                    "cp ts*.json /tmp/$REPO &&",
                    "cp version.txt /tmp/$REPO/ && ",
                    "cp -R src /tmp/$REPO && ",
                    "cp -R style /tmp/$REPO && ",
                    "cp -R resources /tmp/$REPO",
                ],
                "type": "shell"
            },
            {
                "label": "package",
                "command": [
                    "cd /tmp/$REPO &&",
                    "npm install && ",
                    "jlpm run build && ",
                    "python3.7 setup.py sdist"
                ],
                "dependsOrder": "sequence",
                "dependsOn": [
                    "package-repo"
                ],
                "type": "shell"
            },
            {
                "label": "publish",
                "command": [
                    "unset REPO_ENV &&", 
                    "cd /tmp/$REPO &&",
                    "twine upload dist/* &&",
                    "rm -rf /tmp/$REPO"
                ],
                "dependsOrder": "sequence",
                "dependsOn": [
                    "package"
                ],
                "type": "shell"
            },
            {
                "label": "python",
                "command": "python3.7",
                "type": "shell"
            },
            {
                "label": "requirements",
                "command": [
                    "python3.7 -m pip list --format freeze > docker/frozen_requirements.txt && "
                ],
                "type": "shell"
            }
        ]
    }
}
